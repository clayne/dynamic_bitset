name: Ubuntu

on:
  - push
  - pull_request

env:
  CMAKE_VERSION: 3.30.3
  CCACHE_VERSION: 4.10.2

jobs:
  build:
    name: ${{matrix.config.os}} - ${{matrix.config.compiler_name}} - ${{matrix.build_type}}
    runs-on: ${{matrix.config.os}}
    strategy:
      fail-fast: false
      matrix:
        config: [
          {os: ubuntu-20.04, compiler_name: gcc-10, c_compiler: gcc-10, cxx_compiler: g++-10},
          {os: ubuntu-20.04, compiler_name: clang-10, c_compiler: clang-10, cxx_compiler: clang++-10},
          {os: ubuntu-20.04, compiler_name: clang-11, c_compiler: clang-11, cxx_compiler: clang++-11},
          {os: ubuntu-20.04, compiler_name: clang-12, c_compiler: clang-12, cxx_compiler: clang++-12},
          {os: ubuntu-22.04, compiler_name: gcc-10, c_compiler: gcc-10, cxx_compiler: g++-10},
          {os: ubuntu-22.04, compiler_name: gcc-11, c_compiler: gcc-11, cxx_compiler: g++-11},
          {os: ubuntu-22.04, compiler_name: gcc-12, c_compiler: gcc-12, cxx_compiler: g++-12},
          {os: ubuntu-22.04, compiler_name: clang-13, c_compiler: clang-13, cxx_compiler: clang++-13},
          {os: ubuntu-22.04, compiler_name: clang-14, c_compiler: clang-14, cxx_compiler: clang++-14},
          {os: ubuntu-22.04, compiler_name: clang-15, c_compiler: clang-15, cxx_compiler: clang++-15},
          {os: ubuntu-24.04, compiler_name: gcc-12, c_compiler: gcc-12, cxx_compiler: g++-12},
          {os: ubuntu-24.04, compiler_name: gcc-13, c_compiler: gcc-13, cxx_compiler: g++-13},
          {os: ubuntu-24.04, compiler_name: gcc-14, c_compiler: gcc-14, cxx_compiler: g++-14},
          {os: ubuntu-24.04, compiler_name: clang-16, c_compiler: clang-16, cxx_compiler: clang++-16},
          {os: ubuntu-24.04, compiler_name: clang-17, c_compiler: clang-17, cxx_compiler: clang++-17},
          {os: ubuntu-24.04, compiler_name: clang-18, c_compiler: clang-18, cxx_compiler: clang++-18},
        ]
        build_type: [Debug, Release, Sanitize]

    steps:
    - name: Checkout dynamic_bitset
      uses: actions/checkout@v4
      with:
        submodules: recursive
        path: dynamic_bitset

    - name: Setup build environment
      shell: cmake -P {0}
      run: |
        execute_process(COMMAND ${{matrix.config.c_compiler}} --version)
        execute_process(COMMAND ${{matrix.config.cxx_compiler}} --version)
        file(APPEND "$ENV{GITHUB_ENV}" "CMAKE_GENERATOR=Unix Makefiles\n")
        file(APPEND "$ENV{GITHUB_ENV}" "CC=${{matrix.config.c_compiler}}\n")
        file(APPEND "$ENV{GITHUB_ENV}" "CXX=${{matrix.config.cxx_compiler}}\n")

    - name: Setup CMake
      id: cmake
      uses: ./dynamic_bitset/.github/actions/setup_cmake
      with:
        cmake_version: ${{env.CMAKE_VERSION}}
        used_env: ${{matrix.config.os}}

    - name: Setup ccache
      id: ccache
      uses: ./dynamic_bitset/.github/actions/setup_ccache
      with:
        ccache_version: ${{env.CCACHE_VERSION}}
        used_env: ${{matrix.config.os}}
        cache_id: ${{matrix.config.os}}-${{matrix.config.compiler_name}}-${{matrix.build_type}}

    - name: Configure
      shell: cmake -P {0}
      run: |
        file(TO_CMAKE_PATH [=[${{github.workspace}}]=] workspace)
        execute_process(
          COMMAND ${{steps.cmake.outputs.cmake_binary}}
            -S "${workspace}/dynamic_bitset"
            -B "${workspace}/dynamic_bitset/build"
            -D CMAKE_CONFIGURATION_TYPES=${{matrix.build_type}}
            -D CMAKE_BUILD_TYPE=${{matrix.build_type}}
            -D CMAKE_C_COMPILER_LAUNCHER=${{steps.ccache.outputs.ccache_binary}}
            -D CMAKE_CXX_COMPILER_LAUNCHER=${{steps.ccache.outputs.ccache_binary}}
          RESULT_VARIABLE result
        )
        if(NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
        endif()

    - name: Build
      shell: cmake -P {0}
      run: |
        file(TO_CMAKE_PATH [=[${{github.workspace}}]=] workspace)
        include(ProcessorCount)
        ProcessorCount(N)
        execute_process(
          COMMAND ${{steps.cmake.outputs.cmake_binary}}
            --build "${workspace}/dynamic_bitset/build"
            --config ${{matrix.build_type}}
            --parallel ${N}
          RESULT_VARIABLE result
        )
        if(NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
        endif()
        execute_process(COMMAND ${{steps.ccache.outputs.ccache_binary}} -s)

    - name: Run tests
      shell: cmake -P {0}
      run: |
        file(TO_CMAKE_PATH [=[${{github.workspace}}]=] workspace)
        include(ProcessorCount)
        ProcessorCount(N)
        set(ENV{CTEST_OUTPUT_ON_FAILURE} "ON")
        execute_process(
          COMMAND ${{steps.cmake.outputs.ctest_binary}} --output-on-failure --parallel ${N}
          WORKING_DIRECTORY "${workspace}/dynamic_bitset/build"
          RESULT_VARIABLE result
        )
        if(NOT result EQUAL 0)
          message(FATAL_ERROR "Running tests failed!")
        endif()
